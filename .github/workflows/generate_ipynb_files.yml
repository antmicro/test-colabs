name: Generate ipynb files
on:
  push:
    branches: [ main ]
    paths:
    - 'philosophers.py'
    - 'hello_world.py'
    - 'micropython.py'
    - 'shell_module.py'
    - 'tensorflow_lite_micro.py'
    - '.github/workflows/generate_ipynb_files.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-18.04
    env:
      GH_SERVICE_ACCOUNT_NAME: "renode-bot"
      GH_SERVICE_ACCOUNT_EMAIL: "renode-bot@antmicro.com"
      GH_SERVICE_ACCOUNT_TOKEN: ${{ secrets.GH_SERVICE_ACCOUNT_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set Up Python
        uses: actions/setup-python@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jupytext
          pip install jinja-cli
          sudo apt install -y jq

      - name: Generate py demos
        run: |
          #delete ipynb files to make run a bit faster
          find . -name *.ipynb -delete
          demos=(philosophers hello_world tensorflow_lite_micro shell_module micropython)
          SCRIPT="cpu0 VectorTableOffset \`sysbus GetSymbolAddress \"_vector_table\"\`"
          for i in "${!demos[@]}"
          do
            wget https://zephyr-dashboard.renode.io/results-"${demos[i]}"_all.json
            board_names=( $(jq -r ' .[] | select(.status | contains("PASSED")) | .board_name' results-"${demos[i]}"_all.json))
            board_path=( $(jq -r ' .[] | select(.status | contains("PASSED")) | .board_path' results-"${demos[i]}"_all.json))
            uart_names=( $(jq -r ' .[] | select(.status | contains("PASSED")) | .uart_name' results-"${demos[i]}"_all.json))
            readarray -t cpus < <(jq -r ' .[] | select(.status | contains("PASSED")) | .cpu' results-"${demos[i]}"_all.json)
            for j in "${!board_path[@]}"
            do
                echo "${demos[i]} ${board_path[j]}"
                if [ ! -d "${board_path[j]}" ] ; then
                    mkdir -p ${board_path[j]%/*}
                fi
                if echo ${cpus[j]##*-> } | grep -q 'arm/armv.-m' ; then
                  jinja -D zephyr_platform ${board_names[j]} -D board_path ${board_path[j]} -D uart_name ${uart_names[j]} -D script "$SCRIPT" -o "${board_path[j]}"_"${demos[i]}".py "${demos[i]}".py
                else
                  jinja -D zephyr_platform ${board_names[j]} -D board_path ${board_path[j]} -D uart_name ${uart_names[j]} -o "${board_path[j]}"_"${demos[i]}".py "${demos[i]}".py
                fi
            done
          done

      - name: Generate ipynb
        run: |
          cd boards
          find . -type f -exec jupytext --to ipynb {} \;
          cd ..

      - name: Configure git
        run: |
          git config --global user.name $GH_SERVICE_ACCOUNT_NAME
          git config --global user.email $GH_SERVICE_ACCOUNT_EMAIL

      - name: GH CLI auth
        run: echo $GH_SERVICE_ACCOUNT_TOKEN | gh auth login --with-token

      - name: Commit and push
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          export NEW_BRANCH=bot-$(date +%F_%H-%M)
          git checkout -b $NEW_BRANCH
          git add boards/
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "Generate ipynb files";
            git push -u https://$GH_SERVICE_ACCOUNT_NAME:$GH_SERVICE_ACCOUNT_TOKEN@github.com/antmicro/test-colabs.git $NEW_BRANCH
            gh pr create --fill --head $NEW_BRANCH --base main
            gh pr merge --auto --rebase --delete-branch
          else
            echo "no changes";
          fi
